trigger:
- main

pool:
  name: SelfHostPool

variables:
  NODE_VERSION: '20.x'

stages:
- stage: Build
  displayName: 'Build Frontend & Backend'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:

    # 1️⃣ Checkout code
    - task: Checkout@1

    # 2️⃣ Install Node on self-hosted agent (optional if already installed)
    - task: NodeTool@0
      inputs:
        versionSpec: '$(NODE_VERSION)'
      displayName: 'Use Node.js $(NODE_VERSION)'

    # 3️⃣ Build Frontend
    - script: |
        cd Frontend
        npm install
        npm run build
      displayName: 'Build Frontend'

    # 4️⃣ Copy frontend build to backend/public
    - script: |
        if not exist Backend\public mkdir Backend\public
        xcopy Frontend\build Backend\public /E /I /Y
      displayName: 'Copy Frontend Build to Backend'

    # 5️⃣ Package backend (without node_modules)
    - script: |
        cd Backend
        if exist node_modules rmdir /s /q node_modules
        powershell -Command "Compress-Archive -Path '*' -DestinationPath '../backend.zip' -Force"
      displayName: 'Package Backend for Deployment'

- stage: Deploy
  displayName: 'Deploy to Azure Web App'
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy Backend'
    environment: 'AzureWebApp'
    strategy:
      runOnce:
        deploy:
          steps:
          # 1️⃣ Download artifact (backend.zip)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)'

          # 2️⃣ Deploy to Azure Web App
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'tdas_sc'
              appType: 'webApp'
              appName: 'transportationDelayAlertApp'
              package: '$(Pipeline.Workspace)/backend.zip'

          # 3️⃣ Post-deploy: Install backend dependencies on Azure
          - script: |
              cd site\wwwroot
              npm install --production
            displayName: 'Install Backend Dependencies on Azure'
